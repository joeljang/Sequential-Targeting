0/31040 [00:00<? ?it/s] wheel.py:112: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  label = torch.tensor(batch.label, dtype=torch.long, device=self.device)
0/31040 [00:00<? ?it/s]  0 loss: 0.27019, acc: 0.078125: 640/31040 [00:06<05:26 93.15it/s]  0 loss: 0.27019, acc: 0.078125: 640/31040 [00:07<05:26 93.15it/s]  0 loss: 0.10905, acc: 0.84375:  1280/31040 [00:14<05:36 88.36it/s]  0 loss: 0.10905, acc: 0.84375: 1280/31040 [00:15<05:36 88.36it/s]  0 loss: 0.099093, acc: 0.87426: 1920/31040 [00:23<05:48 83.62it/s]  0 loss: 0.099093, acc: 0.87426: 1920/31040 [00:24<05:48 83.62it/s]  0 loss: 0.094456, acc: 0.88609: 2560/31040 [00:30<05:36 84.57it/s]  0 loss: 0.094456, acc: 0.88609: 2560/31040 [00:31<05:36 84.57it/s]  0 loss: 0.095066, acc: 0.88834: 3200/31040 [00:38<05:27 85.12it/s]  0 loss: 0.095066, acc: 0.88834: 3200/31040 [00:39<05:27 85.12it/s]  0 loss: 0.092103, acc: 0.89308: 3840/31040 [00:46<05:26 83.20it/s]  0 loss: 0.092103, acc: 0.89308: 3840/31040 [00:47<05:26 83.20it/s]  0 loss: 0.090415, acc: 0.89575: 4480/31040 [00:53<05:17 83.76it/s]  0 loss: 0.090415, acc: 0.89575: 4480/31040 [00:54<05:17 83.76it/s]  0 loss: 0.088879, acc: 0.89811: 5120/31040 [01:01<05:13 82.59it/s]  0 loss: 0.088879, acc: 0.89811: 5120/31040 [01:02<05:13 82.59it/s]  0 loss: 0.087827, acc: 0.89969: 5760/31040 [01:09<05:01 83.87it/s]  0 loss: 0.087827, acc: 0.89969: 5760/31040 [01:09<05:01 83.87it/s]  0 loss: 0.088326, acc: 0.89938: 6400/31040 [01:17<04:55 83.34it/s]  0 loss: 0.088326, acc: 0.89938: 6400/31040 [01:17<04:55 83.34it/s]  0 loss: 0.088615, acc: 0.89929: 7040/31040 [01:23<04:38 86.18it/s]  0 loss: 0.088615, acc: 0.89929: 7040/31040 [01:24<04:38 86.18it/s]  0 loss: 0.087322, acc: 0.9009:  7680/31040 [01:31<04:36 84.34it/s]  0 loss: 0.087322, acc: 0.9009: 7680/31040 [01:32<04:36 84.34it/s]  0 loss: 0.084336, acc: 0.90457: 8320/31040 [01:40<04:34 82.68it/s]  0 loss: 0.084336, acc: 0.90457: 8320/31040 [01:40<04:34 82.68it/s]  0 loss: 0.084061, acc: 0.90506: 8960/31040 [01:48<04:30 81.59it/s]  0 loss: 0.084061, acc: 0.90506: 8960/31040 [01:49<04:30 81.59it/s]  0 loss: 0.084566, acc: 0.90448: 9600/31040 [01:55<04:19 82.58it/s]  0 loss: 0.084566, acc: 0.90448: 9600/31040 [01:56<04:19 82.58it/s]  0 loss: 0.083895, acc: 0.90542: 10240/31040 [02:02<04:02 85.81it/s]  0 loss: 0.083895, acc: 0.90542: 10240/31040 [02:03<04:02 85.81it/s]  0 loss: 0.083859, acc: 0.90557: 10880/31040 [02:10<03:58 84.65it/s]  0 loss: 0.083859, acc: 0.90557: 10880/31040 [02:10<03:58 84.65it/s]  0 loss: 0.084225, acc: 0.90506: 11520/31040 [02:17<03:47 85.79it/s]  0 loss: 0.084225, acc: 0.90506: 11520/31040 [02:17<03:47 85.79it/s]  0 loss: 0.084312, acc: 0.90496: 12160/31040 [02:25<03:41 85.12it/s]  0 loss: 0.084312, acc: 0.90496: 12160/31040 [02:25<03:41 85.12it/s]  0 loss: 0.083867, acc: 0.90527: 12800/31040 [02:33<03:41 82.48it/s]  0 loss: 0.083867, acc: 0.90527: 12800/31040 [02:34<03:41 82.48it/s]  0 loss: 0.083145, acc: 0.90586: 13440/31040 [02:40<03:27 84.78it/s]  0 loss: 0.083145, acc: 0.90586: 13440/31040 [02:41<03:27 84.78it/s]  0 loss: 0.082677, acc: 0.90632: 14080/31040 [02:46<03:10 89.25it/s]  0 loss: 0.082677, acc: 0.90632: 14080/31040 [02:47<03:10 89.25it/s]  0 loss: 0.08228, acc: 0.9066:   14720/31040 [02:55<03:11 85.06it/s]  0 loss: 0.08228, acc: 0.9066: 14720/31040 [02:55<03:11 85.06it/s]  0 loss: 0.081292, acc: 0.90774: 15360/31040 [03:02<03:00 86.65it/s]  0 loss: 0.081292, acc: 0.90774: 15360/31040 [03:03<03:00 86.65it/s]  0 loss: 0.080779, acc: 0.90813: 16000/31040 [03:10<02:58 84.22it/s]  0 loss: 0.080779, acc: 0.90813: 16000/31040 [03:11<02:58 84.22it/s]  0 loss: 0.080166, acc: 0.90893: 16640/31040 [03:17<02:48 85.35it/s]  0 loss: 0.080166, acc: 0.90893: 16640/31040 [03:18<02:48 85.35it/s]  0 loss: 0.079858, acc: 0.90924: 17280/31040 [03:25<02:47 82.27it/s]  0 loss: 0.079858, acc: 0.90924: 17280/31040 [03:26<02:47 82.27it/s]  0 loss: 0.079423, acc: 0.90982: 17920/31040 [03:33<02:38 82.79it/s]  0 loss: 0.079423, acc: 0.90982: 17920/31040 [03:34<02:38 82.79it/s]  0 loss: 0.078881, acc: 0.91036: 18560/31040 [03:40<02:27 84.40it/s]  0 loss: 0.078881, acc: 0.91036: 18560/31040 [03:41<02:27 84.40it/s]  0 loss: 0.078552, acc: 0.91071: 19200/31040 [03:48<02:19 84.62it/s]  0 loss: 0.078552, acc: 0.91071: 19200/31040 [03:49<02:19 84.62it/s]  0 loss: 0.078374, acc: 0.91082: 19840/31040 [03:56<02:15 82.55it/s]  0 loss: 0.078374, acc: 0.91082: 19840/31040 [03:57<02:15 82.55it/s]  0 loss: 0.078186, acc: 0.91097: 20480/31040 [04:04<02:07 82.91it/s]  0 loss: 0.078186, acc: 0.91097: 20480/31040 [04:05<02:07 82.91it/s]  0 loss: 0.077588, acc: 0.91165: 21120/31040 [04:11<01:57 84.22it/s]  0 loss: 0.077588, acc: 0.91165: 21120/31040 [04:12<01:57 84.22it/s]  0 loss: 0.077436, acc: 0.91173: 21760/31040 [04:19<01:50 83.89it/s]  0 loss: 0.077436, acc: 0.91173: 21760/31040 [04:19<01:50 83.89it/s]  0 loss: 0.077089, acc: 0.91216: 22400/31040 [04:25<01:37 88.57it/s]  0 loss: 0.077089, acc: 0.91216: 22400/31040 [04:26<01:37 88.57it/s]  0 loss: 0.076908, acc: 0.91235: 23040/31040 [04:32<01:30 88.73it/s]  0 loss: 0.076908, acc: 0.91235: 23040/31040 [04:33<01:30 88.73it/s]  0 loss: 0.076607, acc: 0.9127:  23680/31040 [04:39<01:23 88.52it/s]  0 loss: 0.076607, acc: 0.9127: 23680/31040 [04:40<01:23 88.52it/s]  0 loss: 0.076395, acc: 0.91299: 24320/31040 [04:46<01:15 89.26it/s]  0 loss: 0.076395, acc: 0.91299: 24320/31040 [04:47<01:15 89.26it/s]  0 loss: 0.075951, acc: 0.91347: 24960/31040 [04:53<01:07 90.04it/s]  0 loss: 0.075951, acc: 0.91347: 24960/31040 [04:54<01:07 90.04it/s]  0 loss: 0.075628, acc: 0.91384: 25600/31040 [05:01<01:02 87.21it/s]  0 loss: 0.075628, acc: 0.91384: 25600/31040 [05:02<01:02 87.21it/s]  0 loss: 0.075513, acc: 0.91385: 26240/31040 [05:10<00:59 81.35it/s]  0 loss: 0.075513, acc: 0.91385: 26240/31040 [05:11<00:59 81.35it/s]  0 loss: 0.075291, acc: 0.91412: 26880/31040 [05:18<00:50 81.97it/s]  0 loss: 0.075291, acc: 0.91412: 26880/31040 [05:19<00:50 81.97it/s]  0 loss: 0.074922, acc: 0.91438: 27520/31040 [05:26<00:42 82.12it/s]  0 loss: 0.074922, acc: 0.91438: 27520/31040 [05:27<00:42 82.12it/s]  0 loss: 0.07451, acc: 0.91466:  28160/31040 [05:34<00:35 80.51it/s]  0 loss: 0.07451, acc: 0.91466: 28160/31040 [05:35<00:35 80.51it/s]  0 loss: 0.074234, acc: 0.91493: 28800/31040 [05:42<00:27 81.98it/s]  0 loss: 0.074234, acc: 0.91493: 28800/31040 [05:43<00:27 81.98it/s]  0 loss: 0.073882, acc: 0.91529: 29440/31040 [05:50<00:19 81.50it/s]  0 loss: 0.073882, acc: 0.91529: 29440/31040 [05:51<00:19 81.50it/s]  0 loss: 0.073378, acc: 0.91591: 30080/31040 [05:58<00:12 79.37it/s]  0 loss: 0.073378, acc: 0.91591: 30080/31040 [05:59<00:12 79.37it/s]  0 loss: 0.073207, acc: 0.91597: 30720/31040 [06:06<00:03 81.45it/s]  0 loss: 0.073207, acc: 0.91597: 30720/31040 [06:06<00:03 81.45it/s]  0 loss: 0.072942, acc: 0.91626: 31040/31040 [06:09<00:00 84.04it/s]  0 loss: 0.072942, acc: 0.91626: 
{"type": "train", "dataset": "catcall_trainb", "epoch": 0, "loss": 0.0728799579145159, "acc": 0.9163601161665054}
| 0/512 [00:00<?, ?it/s]wheel.py:152: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  label = torch.tensor(batch.label, dtype=torch.long, device=self.device)
| 256/512 [00:00<00:00, 2144.51it/s]| 384/512 [00:00<00:00, 1466.75it/s]| 512/512 [00:00<00:00, 635.07it/s] | 512/512 [00:00<00:00, 692.09it/s]
{"type": "test", "dataset": "catcall_testb", "epoch": 0, "accuracy": 0.87, "precision": 0.9, "recall": 0.1232876712328767, "f1score": 0.21686746987951808, "ROC-AUC": 0.5604728754290847}
0/31040 [00:00<? ?it/s] wheel.py:112: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  label = torch.tensor(batch.label, dtype=torch.long, device=self.device)
0/31040 [00:00<? ?it/s]  1 loss: 0.061622, acc: 0.9375: 640/31040 [00:08<06:41 75.63it/s]  1 loss: 0.061622, acc: 0.9375: 640/31040 [00:09<06:41 75.63it/s]  1 loss: 0.053141, acc: 0.9375: 1280/31040 [00:15<06:09 80.56it/s]  1 loss: 0.053141, acc: 0.9375: 1280/31040 [00:16<06:09 80.56it/s]  1 loss: 0.053846, acc: 0.93452: 1920/31040 [00:23<06:01 80.49it/s]  1 loss: 0.053846, acc: 0.93452: 1920/31040 [00:23<06:01 80.49it/s]  1 loss: 0.054727, acc: 0.93296: 2560/31040 [00:29<05:34 85.09it/s]  1 loss: 0.054727, acc: 0.93296: 2560/31040 [00:30<05:34 85.09it/s]  1 loss: 0.056819, acc: 0.93216: 3200/31040 [00:37<05:27 84.88it/s]  1 loss: 0.056819, acc: 0.93216: 3200/31040 [00:37<05:27 84.88it/s]  1 loss: 0.059211, acc: 0.928:   3840/31040 [00:44<05:11 87.19it/s]  1 loss: 0.059211, acc: 0.928: 3840/31040 [00:45<05:11 87.19it/s]  1 loss: 0.059281, acc: 0.92751: 4480/31040 [00:51<05:09 85.72it/s]  1 loss: 0.059281, acc: 0.92751: 4480/31040 [00:52<05:09 85.72it/s]  1 loss: 0.057933, acc: 0.92914: 5120/31040 [01:00<05:12 82.99it/s]  1 loss: 0.057933, acc: 0.92914: 5120/31040 [01:01<05:12 82.99it/s]  1 loss: 0.056054, acc: 0.93171: 5760/31040 [01:07<05:03 83.40it/s]  1 loss: 0.056054, acc: 0.93171: 5760/31040 [01:08<05:03 83.40it/s]  1 loss: 0.054592, acc: 0.93372: 6400/31040 [01:13<04:37 88.66it/s]  1 loss: 0.054592, acc: 0.93372: 6400/31040 [01:14<04:37 88.66it/s]  1 loss: 0.055081, acc: 0.93363: 7040/31040 [01:20<04:22 91.49it/s]  1 loss: 0.055081, acc: 0.93363: 7040/31040 [01:21<04:22 91.49it/s]  1 loss: 0.054317, acc: 0.93426: 7680/31040 [01:27<04:20 89.57it/s]  1 loss: 0.054317, acc: 0.93426: 7680/31040 [01:28<04:20 89.57it/s]  1 loss: 0.054722, acc: 0.93363: 8320/31040 [01:35<04:18 87.96it/s]  1 loss: 0.054722, acc: 0.93363: 8320/31040 [01:36<04:18 87.96it/s]  1 loss: 0.054855, acc: 0.9338:  8960/31040 [01:42<04:10 88.28it/s]  1 loss: 0.054855, acc: 0.9338: 8960/31040 [01:43<04:10 88.28it/s]  1 loss: 0.053572, acc: 0.93528: 9600/31040 [01:50<04:12 85.07it/s]  1 loss: 0.053572, acc: 0.93528: 9600/31040 [01:51<04:12 85.07it/s]  1 loss: 0.053869, acc: 0.93512: 10240/31040 [01:59<04:11 82.67it/s]  1 loss: 0.053869, acc: 0.93512: 10240/31040 [01:59<04:11 82.67it/s]  1 loss: 0.053673, acc: 0.93536: 10880/31040 [02:06<04:03 82.84it/s]  1 loss: 0.053673, acc: 0.93536: 10880/31040 [02:07<04:03 82.84it/s]  1 loss: 0.053247, acc: 0.93595: 11520/31040 [02:15<04:01 80.72it/s]  1 loss: 0.053247, acc: 0.93595: 11520/31040 [02:16<04:01 80.72it/s]  1 loss: 0.053053, acc: 0.93577: 12160/31040 [02:23<03:59 78.81it/s]  1 loss: 0.053053, acc: 0.93577: 12160/31040 [02:24<03:59 78.81it/s]  1 loss: 0.05204, acc: 0.93717:  12800/31040 [02:31<03:48 79.68it/s]  1 loss: 0.05204, acc: 0.93717: 12800/31040 [02:32<03:48 79.68it/s]  1 loss: 0.051958, acc: 0.93719: 13440/31040 [02:39<03:37 81.04it/s]  1 loss: 0.051958, acc: 0.93719: 13440/31040 [02:39<03:37 81.04it/s]  1 loss: 0.051709, acc: 0.9375:  14080/31040 [02:46<03:24 83.00it/s]  1 loss: 0.051709, acc: 0.9375: 14080/31040 [02:47<03:24 83.00it/s]  1 loss: 0.05142, acc: 0.93799: 14720/31040 [02:55<03:23 80.02it/s]  1 loss: 0.05142, acc: 0.93799: 14720/31040 [02:55<03:23 80.02it/s]  1 loss: 0.051403, acc: 0.93818: 15360/31040 [03:02<03:10 82.41it/s]  1 loss: 0.051403, acc: 0.93818: 15360/31040 [03:03<03:10 82.41it/s]  1 loss: 0.051347, acc: 0.93821: 16000/31040 [03:10<03:02 82.52it/s]  1 loss: 0.051347, acc: 0.93821: 16000/31040 [03:10<03:02 82.52it/s]  1 loss: 0.051089, acc: 0.93856: 16640/31040 [03:18<02:57 81.28it/s]  1 loss: 0.051089, acc: 0.93856: 16640/31040 [03:18<02:57 81.28it/s]  1 loss: 0.051662, acc: 0.9378:  17280/31040 [03:25<02:47 82.12it/s]  1 loss: 0.051662, acc: 0.9378: 17280/31040 [03:26<02:47 82.12it/s]  1 loss: 0.051427, acc: 0.93819: 17920/31040 [03:33<02:39 82.29it/s]  1 loss: 0.051427, acc: 0.93819: 17920/31040 [03:34<02:39 82.29it/s]  1 loss: 0.05109, acc: 0.93861:  18560/31040 [03:40<02:27 84.38it/s]  1 loss: 0.05109, acc: 0.93861: 18560/31040 [03:41<02:27 84.38it/s]  1 loss: 0.051141, acc: 0.93863: 19200/31040 [03:47<02:18 85.46it/s]  1 loss: 0.051141, acc: 0.93863: 19200/31040 [03:48<02:18 85.46it/s]  1 loss: 0.05072, acc: 0.93921:  19840/31040 [03:55<02:13 83.68it/s]  1 loss: 0.05072, acc: 0.93921: 19840/31040 [03:56<02:13 83.68it/s]  1 loss: 0.050372, acc: 0.93966: 20480/31040 [04:03<02:03 85.39it/s]  1 loss: 0.050372, acc: 0.93966: 20480/31040 [04:03<02:03 85.39it/s]  1 loss: 0.050775, acc: 0.9393:  21120/31040 [04:10<01:57 84.46it/s]  1 loss: 0.050775, acc: 0.9393: 21120/31040 [04:11<01:57 84.46it/s]  1 loss: 0.050807, acc: 0.93934: 21760/31040 [04:18<01:52 82.81it/s]  1 loss: 0.050807, acc: 0.93934: 21760/31040 [04:19<01:52 82.81it/s]  1 loss: 0.050858, acc: 0.93924: 22400/31040 [04:26<01:42 84.48it/s]  1 loss: 0.050858, acc: 0.93924: 22400/31040 [04:26<01:42 84.48it/s]  1 loss: 0.050778, acc: 0.93924: 23040/31040 [04:34<01:36 82.49it/s]  1 loss: 0.050778, acc: 0.93924: 23040/31040 [04:35<01:36 82.49it/s]  1 loss: 0.050948, acc: 0.93897: 23680/31040 [04:42<01:30 81.46it/s]  1 loss: 0.050948, acc: 0.93897: 23680/31040 [04:43<01:30 81.46it/s]  1 loss: 0.05115, acc: 0.93881:  24320/31040 [04:49<01:21 82.76it/s]  1 loss: 0.05115, acc: 0.93881: 24320/31040 [04:50<01:21 82.76it/s]  1 loss: 0.051221, acc: 0.93873: 24960/31040 [04:57<01:12 83.81it/s]  1 loss: 0.051221, acc: 0.93873: 24960/31040 [04:57<01:12 83.81it/s]  1 loss: 0.051294, acc: 0.93862: 25600/31040 [05:03<01:02 87.66it/s]  1 loss: 0.051294, acc: 0.93862: 25600/31040 [05:04<01:02 87.66it/s]  1 loss: 0.0511, acc: 0.93898:   26240/31040 [05:11<00:55 85.84it/s]  1 loss: 0.0511, acc: 0.93898: 26240/31040 [05:12<00:55 85.84it/s]  1 loss: 0.051188, acc: 0.93879: 26880/31040 [05:19<00:50 83.07it/s]  1 loss: 0.051188, acc: 0.93879: 26880/31040 [05:20<00:50 83.07it/s]  1 loss: 0.051257, acc: 0.93861: 27520/31040 [05:27<00:42 82.53it/s]  1 loss: 0.051257, acc: 0.93861: 27520/31040 [05:28<00:42 82.53it/s]  1 loss: 0.051526, acc: 0.93819: 28160/31040 [05:34<00:33 85.61it/s]  1 loss: 0.051526, acc: 0.93819: 28160/31040 [05:35<00:33 85.61it/s]  1 loss: 0.051603, acc: 0.93807: 28800/31040 [05:42<00:26 84.97it/s]  1 loss: 0.051603, acc: 0.93807: 28800/31040 [05:43<00:26 84.97it/s]  1 loss: 0.051663, acc: 0.93799: 29440/31040 [05:49<00:18 85.76it/s]  1 loss: 0.051663, acc: 0.93799: 29440/31040 [05:50<00:18 85.76it/s]  1 loss: 0.05156, acc: 0.93818:  30080/31040 [05:57<00:11 85.26it/s]  1 loss: 0.05156, acc: 0.93818: 30080/31040 [05:57<00:11 85.26it/s]  1 loss: 0.05136, acc: 0.93843: 30720/31040 [06:03<00:03 90.19it/s]  1 loss: 0.05136, acc: 0.93843: 30720/31040 [06:04<00:03 90.19it/s]  1 loss: 0.051384, acc: 0.93828: 31040/31040 [06:06<00:00 84.72it/s]  1 loss: 0.051384, acc: 0.93828: 
{"type": "train", "dataset": "catcall_trainb", "epoch": 1, "loss": 0.05123976321435507, "acc": 0.938431752178122}
| 0/512 [00:00<?, ?it/s]wheel.py:152: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  label = torch.tensor(batch.label, dtype=torch.long, device=self.device)
| 256/512 [00:00<00:00, 2031.01it/s]| 384/512 [00:00<00:00, 1419.01it/s]| 512/512 [00:00<00:00, 625.55it/s] | 512/512 [00:00<00:00, 680.90it/s]
{"type": "test", "dataset": "catcall_testb", "epoch": 1, "accuracy": 0.876, "precision": 0.8666666666666667, "recall": 0.1780821917808219, "f1score": 0.2954545454545454, "ROC-AUC": 0.5866991755157037}
0/31040 [00:00<? ?it/s] wheel.py:112: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  label = torch.tensor(batch.label, dtype=torch.long, device=self.device)
0/31040 [00:00<? ?it/s]  2 loss: 0.025492, acc: 0.96875: 640/31040 [00:07<05:40 89.27it/s]  2 loss: 0.025492, acc: 0.96875: 640/31040 [00:08<05:40 89.27it/s]  2 loss: 0.049666, acc: 0.9375:  1280/31040 [00:13<05:27 90.95it/s]  2 loss: 0.049666, acc: 0.9375: 1280/31040 [00:14<05:27 90.95it/s]  2 loss: 0.047596, acc: 0.94345: 1920/31040 [00:22<05:34 86.94it/s]  2 loss: 0.047596, acc: 0.94345: 1920/31040 [00:22<05:34 86.94it/s]  2 loss: 0.048623, acc: 0.94204: 2560/31040 [00:29<05:30 86.17it/s]  2 loss: 0.048623, acc: 0.94204: 2560/31040 [00:30<05:30 86.17it/s]  2 loss: 0.048498, acc: 0.94245: 3200/31040 [00:38<05:35 82.89it/s]  2 loss: 0.048498, acc: 0.94245: 3200/31040 [00:38<05:35 82.89it/s]  2 loss: 0.046764, acc: 0.94485: 3840/31040 [00:45<05:29 82.59it/s]  2 loss: 0.046764, acc: 0.94485: 3840/31040 [00:46<05:29 82.59it/s]  2 loss: 0.047836, acc: 0.94185: 4480/31040 [00:53<05:26 81.35it/s]  2 loss: 0.047836, acc: 0.94185: 4480/31040 [00:54<05:26 81.35it/s]  2 loss: 0.046811, acc: 0.94278: 5120/31040 [01:01<05:11 83.21it/s]  2 loss: 0.046811, acc: 0.94278: 5120/31040 [01:01<05:11 83.21it/s]  2 loss: 0.045638, acc: 0.94387: 5760/31040 [01:09<05:07 82.29it/s]  2 loss: 0.045638, acc: 0.94387: 5760/31040 [01:10<05:07 82.29it/s]  2 loss: 0.045743, acc: 0.94402: 6400/31040 [01:17<05:06 80.33it/s]  2 loss: 0.045743, acc: 0.94402: 6400/31040 [01:18<05:06 80.33it/s]  2 loss: 0.044752, acc: 0.94539: 7040/31040 [01:23<04:40 85.49it/s]  2 loss: 0.044752, acc: 0.94539: 7040/31040 [01:24<04:40 85.49it/s]  2 loss: 0.044841, acc: 0.94524: 7680/31040 [01:31<04:32 85.85it/s]  2 loss: 0.044841, acc: 0.94524: 7680/31040 [01:32<04:32 85.85it/s]  2 loss: 0.045034, acc: 0.94525: 8320/31040 [01:38<04:20 87.26it/s]  2 loss: 0.045034, acc: 0.94525: 8320/31040 [01:39<04:20 87.26it/s]  2 loss: 0.044345, acc: 0.94633: 8960/31040 [01:46<04:18 85.42it/s]  2 loss: 0.044345, acc: 0.94633: 8960/31040 [01:47<04:18 85.42it/s]  2 loss: 0.044017, acc: 0.9467:  9600/31040 [01:53<04:13 84.71it/s]  2 loss: 0.044017, acc: 0.9467: 9600/31040 [01:54<04:13 84.71it/s]  2 loss: 0.044276, acc: 0.94588: 10240/31040 [02:01<04:06 84.50it/s]  2 loss: 0.044276, acc: 0.94588: 10240/31040 [02:02<04:06 84.50it/s]  2 loss: 0.044776, acc: 0.94507: 10880/31040 [02:10<04:06 81.70it/s]  2 loss: 0.044776, acc: 0.94507: 10880/31040 [02:10<04:06 81.70it/s]  2 loss: 0.045308, acc: 0.94426: 11520/31040 [02:17<03:58 82.00it/s]  2 loss: 0.045308, acc: 0.94426: 11520/31040 [02:18<03:58 82.00it/s]  2 loss: 0.04567, acc: 0.9438:   12160/31040 [02:25<03:49 82.29it/s]  2 loss: 0.04567, acc: 0.9438: 12160/31040 [02:26<03:49 82.29it/s]  2 loss: 0.045433, acc: 0.94421: 12800/31040 [02:33<03:45 80.94it/s]  2 loss: 0.045433, acc: 0.94421: 12800/31040 [02:34<03:45 80.94it/s]  2 loss: 0.044954, acc: 0.94465: 13440/31040 [02:41<03:36 81.46it/s]  2 loss: 0.044954, acc: 0.94465: 13440/31040 [02:41<03:36 81.46it/s]  2 loss: 0.045101, acc: 0.94468: 14080/31040 [02:48<03:24 82.76it/s]  2 loss: 0.045101, acc: 0.94468: 14080/31040 [02:49<03:24 82.76it/s]  2 loss: 0.045261, acc: 0.94471: 14720/31040 [02:55<03:07 87.23it/s]  2 loss: 0.045261, acc: 0.94471: 14720/31040 [02:56<03:07 87.23it/s]  2 loss: 0.044833, acc: 0.94555: 15360/31040 [03:02<03:01 86.20it/s]  2 loss: 0.044833, acc: 0.94555: 15360/31040 [03:03<03:01 86.20it/s]  2 loss: 0.044632, acc: 0.9458:  16000/31040 [03:10<02:56 85.21it/s]  2 loss: 0.044632, acc: 0.9458: 16000/31040 [03:11<02:56 85.21it/s]  2 loss: 0.044592, acc: 0.94559: 16640/31040 [03:18<02:48 85.61it/s]  2 loss: 0.044592, acc: 0.94559: 16640/31040 [03:18<02:48 85.61it/s]  2 loss: 0.044292, acc: 0.946:   17280/31040 [03:24<02:35 88.42it/s]  2 loss: 0.044292, acc: 0.946: 17280/31040 [03:25<02:35 88.42it/s]  2 loss: 0.044084, acc: 0.94621: 17920/31040 [03:32<02:30 87.07it/s]  2 loss: 0.044084, acc: 0.94621: 17920/31040 [03:33<02:30 87.07it/s]  2 loss: 0.044087, acc: 0.94612: 18560/31040 [03:40<02:28 84.03it/s]  2 loss: 0.044087, acc: 0.94612: 18560/31040 [03:41<02:28 84.03it/s]  2 loss: 0.043598, acc: 0.94679: 19200/31040 [03:48<02:21 83.51it/s]  2 loss: 0.043598, acc: 0.94679: 19200/31040 [03:48<02:21 83.51it/s]  2 loss: 0.043436, acc: 0.94695: 19840/31040 [03:54<02:07 87.61it/s]  2 loss: 0.043436, acc: 0.94695: 19840/31040 [03:55<02:07 87.61it/s]  2 loss: 0.04361, acc: 0.94679:  20480/31040 [04:02<02:02 86.28it/s]  2 loss: 0.04361, acc: 0.94679: 20480/31040 [04:02<02:02 86.28it/s]  2 loss: 0.043636, acc: 0.94689: 21120/31040 [04:09<01:53 87.36it/s]  2 loss: 0.043636, acc: 0.94689: 21120/31040 [04:10<01:53 87.36it/s]  2 loss: 0.04381, acc: 0.94675:  21760/31040 [04:16<01:42 90.82it/s]  2 loss: 0.04381, acc: 0.94675: 21760/31040 [04:16<01:42 90.82it/s]  2 loss: 0.043822, acc: 0.94666: 22400/31040 [04:23<01:38 87.33it/s]  2 loss: 0.043822, acc: 0.94666: 22400/31040 [04:24<01:38 87.33it/s]  2 loss: 0.043665, acc: 0.94685: 23040/31040 [04:31<01:32 86.45it/s]  2 loss: 0.043665, acc: 0.94685: 23040/31040 [04:32<01:32 86.45it/s]  2 loss: 0.043436, acc: 0.94715: 23680/31040 [04:39<01:26 85.07it/s]  2 loss: 0.043436, acc: 0.94715: 23680/31040 [04:40<01:26 85.07it/s]  2 loss: 0.043262, acc: 0.94744: 24320/31040 [04:46<01:17 86.19it/s]  2 loss: 0.043262, acc: 0.94744: 24320/31040 [04:47<01:17 86.19it/s]  2 loss: 0.043243, acc: 0.94751: 24960/31040 [04:53<01:09 87.75it/s]  2 loss: 0.043243, acc: 0.94751: 24960/31040 [04:54<01:09 87.75it/s]  2 loss: 0.042945, acc: 0.94789: 25600/31040 [05:00<01:02 87.54it/s]  2 loss: 0.042945, acc: 0.94789: 25600/31040 [05:01<01:02 87.54it/s]  2 loss: 0.042658, acc: 0.9481:  26240/31040 [05:09<00:56 84.67it/s]  2 loss: 0.042658, acc: 0.9481: 26240/31040 [05:09<00:56 84.67it/s]  2 loss: 0.042942, acc: 0.94773: 26880/31040 [05:16<00:48 84.97it/s]  2 loss: 0.042942, acc: 0.94773: 26880/31040 [05:17<00:48 84.97it/s]  2 loss: 0.043161, acc: 0.94752: 27520/31040 [05:24<00:42 83.56it/s]  2 loss: 0.043161, acc: 0.94752: 27520/31040 [05:25<00:42 83.56it/s]  2 loss: 0.0432, acc: 0.94754:   28160/31040 [05:30<00:32 87.74it/s]  2 loss: 0.0432, acc: 0.94754: 28160/31040 [05:31<00:32 87.74it/s]  2 loss: 0.043069, acc: 0.94781: 28800/31040 [05:39<00:26 84.19it/s]  2 loss: 0.043069, acc: 0.94781: 28800/31040 [05:39<00:26 84.19it/s]  2 loss: 0.042902, acc: 0.94796: 29440/31040 [05:47<00:19 82.60it/s]  2 loss: 0.042902, acc: 0.94796: 29440/31040 [05:48<00:19 82.60it/s]  2 loss: 0.042938, acc: 0.94794: 30080/31040 [05:55<00:11 80.25it/s]  2 loss: 0.042938, acc: 0.94794: 30080/31040 [05:56<00:11 80.25it/s]  2 loss: 0.042888, acc: 0.94795: 30720/31040 [06:04<00:04 79.57it/s]  2 loss: 0.042888, acc: 0.94795: 30720/31040 [06:04<00:04 79.57it/s]  2 loss: 0.0429, acc: 0.94793:   31040/31040 [06:07<00:00 84.54it/s]  2 loss: 0.0429, acc: 0.94793: 
{"type": "train", "dataset": "catcall_trainb", "epoch": 2, "loss": 0.04302207476508429, "acc": 0.9477896095514682}
| 0/512 [00:00<?, ?it/s]wheel.py:152: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  label = torch.tensor(batch.label, dtype=torch.long, device=self.device)
| 256/512 [00:00<00:00, 2050.59it/s]| 384/512 [00:00<00:00, 1440.41it/s]| 512/512 [00:00<00:00, 643.26it/s] | 512/512 [00:00<00:00, 699.73it/s]
{"type": "test", "dataset": "catcall_testb", "epoch": 2, "accuracy": 0.888, "precision": 0.8148148148148148, "recall": 0.3013698630136986, "f1score": 0.44, "ROC-AUC": 0.6448301305700811}
0/31040 [00:00<? ?it/s] wheel.py:112: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  label = torch.tensor(batch.label, dtype=torch.long, device=self.device)
0/31040 [00:00<? ?it/s]  3 loss: 0.0093574, acc: 1.0: 640/31040 [00:07<05:48 87.33it/s]  3 loss: 0.0093574, acc: 1.0: 640/31040 [00:08<05:48 87.33it/s]  3 loss: 0.037669, acc: 0.95739: 1280/31040 [00:14<05:44 86.33it/s]  3 loss: 0.037669, acc: 0.95739: 1280/31040 [00:15<05:44 86.33it/s]  3 loss: 0.03296, acc: 0.96354:  1920/31040 [00:22<05:40 85.55it/s]  3 loss: 0.03296, acc: 0.96354: 1920/31040 [00:23<05:40 85.55it/s]  3 loss: 0.037651, acc: 0.95716: 2560/31040 [00:30<05:43 82.94it/s]  3 loss: 0.037651, acc: 0.95716: 2560/31040 [00:31<05:43 82.94it/s]  3 loss: 0.037654, acc: 0.95694: 3200/31040 [00:39<05:42 81.34it/s]  3 loss: 0.037654, acc: 0.95694: 3200/31040 [00:39<05:42 81.34it/s]  3 loss: 0.03736, acc: 0.9568:   3840/31040 [00:47<05:40 79.99it/s]  3 loss: 0.03736, acc: 0.9568: 3840/31040 [00:48<05:40 79.99it/s]  3 loss: 0.03772, acc: 0.95517: 4480/31040 [00:54<05:18 83.31it/s]  3 loss: 0.03772, acc: 0.95517: 4480/31040 [00:55<05:18 83.31it/s]  3 loss: 0.038932, acc: 0.95379: 5120/31040 [01:00<04:58 86.73it/s]  3 loss: 0.038932, acc: 0.95379: 5120/31040 [01:01<04:58 86.73it/s]  3 loss: 0.038361, acc: 0.95467: 5760/31040 [01:08<04:55 85.65it/s]  3 loss: 0.038361, acc: 0.95467: 5760/31040 [01:09<04:55 85.65it/s]  3 loss: 0.038777, acc: 0.95381: 6400/31040 [01:15<04:45 86.40it/s]  3 loss: 0.038777, acc: 0.95381: 6400/31040 [01:16<04:45 86.40it/s]  3 loss: 0.037922, acc: 0.95545: 7040/31040 [01:23<04:43 84.76it/s]  3 loss: 0.037922, acc: 0.95545: 7040/31040 [01:24<04:43 84.76it/s]  3 loss: 0.038083, acc: 0.95524: 7680/31040 [01:31<04:34 85.17it/s]  3 loss: 0.038083, acc: 0.95524: 7680/31040 [01:31<04:34 85.17it/s]  3 loss: 0.037531, acc: 0.95584: 8320/31040 [01:38<04:27 84.91it/s]  3 loss: 0.037531, acc: 0.95584: 8320/31040 [01:39<04:27 84.91it/s]  3 loss: 0.036944, acc: 0.95635: 8960/31040 [01:46<04:25 83.09it/s]  3 loss: 0.036944, acc: 0.95635: 8960/31040 [01:47<04:25 83.09it/s]  3 loss: 0.036785, acc: 0.95678: 9600/31040 [01:55<04:25 80.79it/s]  3 loss: 0.036785, acc: 0.95678: 9600/31040 [01:56<04:25 80.79it/s]  3 loss: 0.037253, acc: 0.95613: 10240/31040 [02:02<04:13 82.11it/s]  3 loss: 0.037253, acc: 0.95613: 10240/31040 [02:03<04:13 82.11it/s]  3 loss: 0.036535, acc: 0.95691: 10880/31040 [02:10<04:02 82.96it/s]  3 loss: 0.036535, acc: 0.95691: 10880/31040 [02:11<04:02 82.96it/s]  3 loss: 0.036658, acc: 0.95696: 11520/31040 [02:18<04:01 80.83it/s]  3 loss: 0.036658, acc: 0.95696: 11520/31040 [02:19<04:01 80.83it/s]  3 loss: 0.036103, acc: 0.95779: 12160/31040 [02:27<03:57 79.44it/s]  3 loss: 0.036103, acc: 0.95779: 12160/31040 [02:27<03:57 79.44it/s]  3 loss: 0.035713, acc: 0.95803: 12800/31040 [02:34<03:42 82.07it/s]  3 loss: 0.035713, acc: 0.95803: 12800/31040 [02:35<03:42 82.07it/s]  3 loss: 0.03554, acc: 0.95833:  13440/31040 [02:42<03:37 81.10it/s]  3 loss: 0.03554, acc: 0.95833: 13440/31040 [02:43<03:37 81.10it/s]  3 loss: 0.035521, acc: 0.95831: 14080/31040 [02:50<03:32 79.84it/s]  3 loss: 0.035521, acc: 0.95831: 14080/31040 [02:51<03:32 79.84it/s]  3 loss: 0.035498, acc: 0.95829: 14720/31040 [02:58<03:22 80.78it/s]  3 loss: 0.035498, acc: 0.95829: 14720/31040 [02:59<03:22 80.78it/s]  3 loss: 0.035831, acc: 0.95766: 15360/31040 [03:06<03:11 81.74it/s]  3 loss: 0.035831, acc: 0.95766: 15360/31040 [03:07<03:11 81.74it/s]  3 loss: 0.035634, acc: 0.95786: 16000/31040 [03:13<03:01 82.77it/s]  3 loss: 0.035634, acc: 0.95786: 16000/31040 [03:14<03:01 82.77it/s]  3 loss: 0.03554, acc: 0.95792:  16640/31040 [03:21<02:54 82.52it/s]  3 loss: 0.03554, acc: 0.95792: 16640/31040 [03:22<02:54 82.52it/s]  3 loss: 0.035667, acc: 0.95767: 17280/31040 [03:29<02:49 81.29it/s]  3 loss: 0.035667, acc: 0.95767: 17280/31040 [03:30<02:49 81.29it/s]  3 loss: 0.035639, acc: 0.95774: 17920/31040 [03:36<02:37 83.04it/s]  3 loss: 0.035639, acc: 0.95774: 17920/31040 [03:37<02:37 83.04it/s]  3 loss: 0.035487, acc: 0.95785: 18560/31040 [03:44<02:28 84.17it/s]  3 loss: 0.035487, acc: 0.95785: 18560/31040 [03:45<02:28 84.17it/s]  3 loss: 0.035724, acc: 0.95774: 19200/31040 [03:52<02:24 82.05it/s]  3 loss: 0.035724, acc: 0.95774: 19200/31040 [03:52<02:24 82.05it/s]  3 loss: 0.035961, acc: 0.95738: 19840/31040 [04:00<02:16 82.11it/s]  3 loss: 0.035961, acc: 0.95738: 19840/31040 [04:01<02:16 82.11it/s]  3 loss: 0.0359, acc: 0.9574:    20480/31040 [04:08<02:09 81.81it/s]  3 loss: 0.0359, acc: 0.9574: 20480/31040 [04:08<02:09 81.81it/s]  3 loss: 0.036181, acc: 0.95721: 21120/31040 [04:16<02:02 81.01it/s]  3 loss: 0.036181, acc: 0.95721: 21120/31040 [04:16<02:02 81.01it/s]  3 loss: 0.036097, acc: 0.95742: 21760/31040 [04:23<01:52 82.71it/s]  3 loss: 0.036097, acc: 0.95742: 21760/31040 [04:24<01:52 82.71it/s]  3 loss: 0.035912, acc: 0.95752: 22400/31040 [04:32<01:47 80.64it/s]  3 loss: 0.035912, acc: 0.95752: 22400/31040 [04:32<01:47 80.64it/s]  3 loss: 0.035418, acc: 0.95816: 23040/31040 [04:39<01:39 80.52it/s]  3 loss: 0.035418, acc: 0.95816: 23040/31040 [04:40<01:39 80.52it/s]  3 loss: 0.035819, acc: 0.95771: 23680/31040 [04:47<01:31 80.44it/s]  3 loss: 0.035819, acc: 0.95771: 23680/31040 [04:48<01:31 80.44it/s]  3 loss: 0.035953, acc: 0.95751: 24320/31040 [04:55<01:20 83.12it/s]  3 loss: 0.035953, acc: 0.95751: 24320/31040 [04:55<01:20 83.12it/s]  3 loss: 0.036088, acc: 0.95727: 24960/31040 [05:02<01:12 84.23it/s]  3 loss: 0.036088, acc: 0.95727: 24960/31040 [05:03<01:12 84.23it/s]  3 loss: 0.036199, acc: 0.9572:  25600/31040 [05:10<01:06 81.61it/s]  3 loss: 0.036199, acc: 0.9572: 25600/31040 [05:11<01:06 81.61it/s]  3 loss: 0.036523, acc: 0.95667: 26240/31040 [05:19<01:00 79.81it/s]  3 loss: 0.036523, acc: 0.95667: 26240/31040 [05:20<01:00 79.81it/s]  3 loss: 0.036227, acc: 0.95704: 26880/31040 [05:26<00:51 81.29it/s]  3 loss: 0.036227, acc: 0.95704: 26880/31040 [05:27<00:51 81.29it/s]  3 loss: 0.036173, acc: 0.95702: 27520/31040 [05:35<00:43 80.12it/s]  3 loss: 0.036173, acc: 0.95702: 27520/31040 [05:36<00:43 80.12it/s]  3 loss: 0.036335, acc: 0.95679: 28160/31040 [05:42<00:35 82.07it/s]  3 loss: 0.036335, acc: 0.95679: 28160/31040 [05:43<00:35 82.07it/s]  3 loss: 0.036579, acc: 0.95646: 28800/31040 [05:50<00:27 80.60it/s]  3 loss: 0.036579, acc: 0.95646: 28800/31040 [05:51<00:27 80.60it/s]  3 loss: 0.036522, acc: 0.95662: 29440/31040 [05:57<00:19 84.14it/s]  3 loss: 0.036522, acc: 0.95662: 29440/31040 [05:58<00:19 84.14it/s]  3 loss: 0.036492, acc: 0.95675: 30080/31040 [06:05<00:11 81.33it/s]  3 loss: 0.036492, acc: 0.95675: 30080/31040 [06:06<00:11 81.33it/s]  3 loss: 0.036567, acc: 0.95664: 30720/31040 [06:13<00:03 82.30it/s]  3 loss: 0.036567, acc: 0.95664: 30720/31040 [06:14<00:03 82.30it/s]  3 loss: 0.036567, acc: 0.9567:  31040/31040 [06:16<00:00 82.37it/s]  3 loss: 0.036567, acc: 0.9567: 
{"type": "train", "dataset": "catcall_trainb", "epoch": 3, "loss": 0.03661382469064915, "acc": 0.9566634398192966}
| 0/512 [00:00<?, ?it/s]wheel.py:152: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  label = torch.tensor(batch.label, dtype=torch.long, device=self.device)
| 256/512 [00:00<00:00, 2108.02it/s]| 384/512 [00:00<00:00, 1416.73it/s]| 512/512 [00:00<00:00, 625.63it/s] | 512/512 [00:00<00:00, 680.07it/s]
{"type": "test", "dataset": "catcall_testb", "epoch": 3, "accuracy": 0.9, "precision": 0.896551724137931, "recall": 0.3561643835616438, "f1score": 0.5098039215686274, "ROC-AUC": 0.6745693112187611}
0/31040 [00:00<? ?it/s] wheel.py:112: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  label = torch.tensor(batch.label, dtype=torch.long, device=self.device)
0/31040 [00:00<? ?it/s]  4 loss: 0.028861, acc: 0.96875: 640/31040 [00:08<06:28 78.22it/s]  4 loss: 0.028861, acc: 0.96875: 640/31040 [00:08<06:28 78.22it/s]  4 loss: 0.031681, acc: 0.96165: 1280/31040 [00:16<06:16 79.05it/s]  4 loss: 0.031681, acc: 0.96165: 1280/31040 [00:17<06:16 79.05it/s]  4 loss: 0.034166, acc: 0.95908: 1920/31040 [00:23<05:59 81.09it/s]  4 loss: 0.034166, acc: 0.95908: 1920/31040 [00:24<05:59 81.09it/s]  4 loss: 0.032117, acc: 0.9622:  2560/31040 [00:31<05:49 81.55it/s]  4 loss: 0.032117, acc: 0.9622: 2560/31040 [00:32<05:49 81.55it/s]  4 loss: 0.031184, acc: 0.9638: 3200/31040 [00:38<05:37 82.39it/s]  4 loss: 0.031184, acc: 0.9638: 3200/31040 [00:39<05:37 82.39it/s]  4 loss: 0.031049, acc: 0.96446: 3840/31040 [00:47<05:37 80.61it/s]  4 loss: 0.031049, acc: 0.96446: 3840/31040 [00:47<05:37 80.61it/s]  4 loss: 0.030889, acc: 0.96516: 4480/31040 [00:54<05:19 83.01it/s]  4 loss: 0.030889, acc: 0.96516: 4480/31040 [00:55<05:19 83.01it/s]  4 loss: 0.032161, acc: 0.96435: 5120/31040 [01:01<05:01 85.94it/s]  4 loss: 0.032161, acc: 0.96435: 5120/31040 [01:01<05:01 85.94it/s]  4 loss: 0.031587, acc: 0.96508: 5760/31040 [01:08<04:53 86.18it/s]  4 loss: 0.031587, acc: 0.96508: 5760/31040 [01:09<04:53 86.18it/s]  4 loss: 0.0312, acc: 0.96497:   6400/31040 [01:15<04:40 87.79it/s]  4 loss: 0.0312, acc: 0.96497: 6400/31040 [01:16<04:40 87.79it/s]  4 loss: 0.031475, acc: 0.96473: 7040/31040 [01:23<04:41 85.30it/s]  4 loss: 0.031475, acc: 0.96473: 7040/31040 [01:24<04:41 85.30it/s]  4 loss: 0.031458, acc: 0.96425: 7680/31040 [01:31<04:38 83.81it/s]  4 loss: 0.031458, acc: 0.96425: 7680/31040 [01:32<04:38 83.81it/s]  4 loss: 0.031463, acc: 0.9641:  8320/31040 [01:39<04:36 82.02it/s]  4 loss: 0.031463, acc: 0.9641: 8320/31040 [01:40<04:36 82.02it/s]  4 loss: 0.031709, acc: 0.96386: 8960/31040 [01:46<04:24 83.51it/s]  4 loss: 0.031709, acc: 0.96386: 8960/31040 [01:47<04:24 83.51it/s]  4 loss: 0.030984, acc: 0.96443: 9600/31040 [01:54<04:18 83.07it/s]  4 loss: 0.030984, acc: 0.96443: 9600/31040 [01:55<04:18 83.07it/s]  4 loss: 0.030756, acc: 0.96451: 10240/31040 [02:04<04:25 78.36it/s]  4 loss: 0.030756, acc: 0.96451: 10240/31040 [02:04<04:25 78.36it/s]  4 loss: 0.030598, acc: 0.96477: 10880/31040 [02:12<04:23 76.58it/s]  4 loss: 0.030598, acc: 0.96477: 10880/31040 [02:13<04:23 76.58it/s]  4 loss: 0.030304, acc: 0.9651:  11520/31040 [02:21<04:16 76.06it/s]  4 loss: 0.030304, acc: 0.9651: 11520/31040 [02:22<04:16 76.06it/s]  4 loss: 0.030377, acc: 0.96512: 12160/31040 [02:28<03:57 79.58it/s]  4 loss: 0.030377, acc: 0.96512: 12160/31040 [02:29<03:57 79.58it/s]  4 loss: 0.030868, acc: 0.96441: 12800/31040 [02:35<03:41 82.37it/s]  4 loss: 0.030868, acc: 0.96441: 12800/31040 [02:36<03:41 82.37it/s]  4 loss: 0.031133, acc: 0.96416: 13440/31040 [02:44<03:39 80.34it/s]  4 loss: 0.031133, acc: 0.96416: 13440/31040 [02:45<03:39 80.34it/s]  4 loss: 0.030915, acc: 0.96438: 14080/31040 [02:51<03:27 81.63it/s]  4 loss: 0.030915, acc: 0.96438: 14080/31040 [02:52<03:27 81.63it/s]  4 loss: 0.031133, acc: 0.96408: 14720/31040 [03:00<03:26 79.19it/s]  4 loss: 0.031133, acc: 0.96408: 14720/31040 [03:01<03:26 79.19it/s]  4 loss: 0.031133, acc: 0.96408: 15360/31040 [03:07<03:13 80.87it/s]  4 loss: 0.031133, acc: 0.96408: 15360/31040 [03:08<03:13 80.87it/s]  4 loss: 0.03088, acc: 0.96421:  16000/31040 [03:15<03:02 82.43it/s]  4 loss: 0.03088, acc: 0.96421: 16000/31040 [03:16<03:02 82.43it/s]  4 loss: 0.031221, acc: 0.96365: 16640/31040 [03:23<02:54 82.42it/s]  4 loss: 0.031221, acc: 0.96365: 16640/31040 [03:23<02:54 82.42it/s]  4 loss: 0.031415, acc: 0.96354: 17280/31040 [03:31<02:51 80.04it/s]  4 loss: 0.031415, acc: 0.96354: 17280/31040 [03:32<02:51 80.04it/s]  4 loss: 0.031827, acc: 0.9631:  17920/31040 [03:39<02:45 79.36it/s]  4 loss: 0.031827, acc: 0.9631: 17920/31040 [03:40<02:45 79.36it/s]  4 loss: 0.032085, acc: 0.96269: 18560/31040 [03:47<02:33 81.41it/s]  4 loss: 0.032085, acc: 0.96269: 18560/31040 [03:48<02:33 81.41it/s]  4 loss: 0.031884, acc: 0.963:   19200/31040 [03:54<02:23 82.50it/s]  4 loss: 0.031884, acc: 0.963: 19200/31040 [03:55<02:23 82.50it/s]  4 loss: 0.031755, acc: 0.96314: 19840/31040 [04:02<02:15 82.56it/s]  4 loss: 0.031755, acc: 0.96314: 19840/31040 [04:02<02:15 82.56it/s]  4 loss: 0.031795, acc: 0.96307: 20480/31040 [04:10<02:07 83.11it/s]  4 loss: 0.031795, acc: 0.96307: 20480/31040 [04:10<02:07 83.11it/s]  4 loss: 0.031449, acc: 0.96359: 21120/31040 [04:17<01:59 83.22it/s]  4 loss: 0.031449, acc: 0.96359: 21120/31040 [04:18<01:59 83.22it/s]  4 loss: 0.031449, acc: 0.96365: 21760/31040 [04:25<01:51 83.40it/s]  4 loss: 0.031449, acc: 0.96365: 21760/31040 [04:26<01:51 83.40it/s]  4 loss: 0.031593, acc: 0.96348: 22400/31040 [04:33<01:45 82.07it/s]  4 loss: 0.031593, acc: 0.96348: 22400/31040 [04:33<01:45 82.07it/s]  4 loss: 0.031676, acc: 0.96332: 23040/31040 [04:40<01:36 83.01it/s]  4 loss: 0.031676, acc: 0.96332: 23040/31040 [04:41<01:36 83.01it/s]  4 loss: 0.031734, acc: 0.96321: 23680/31040 [04:48<01:28 82.78it/s]  4 loss: 0.031734, acc: 0.96321: 23680/31040 [04:49<01:28 82.78it/s]  4 loss: 0.031592, acc: 0.96327: 24320/31040 [04:57<01:24 79.40it/s]  4 loss: 0.031592, acc: 0.96327: 24320/31040 [04:58<01:24 79.40it/s]  4 loss: 0.031896, acc: 0.96284: 24960/31040 [05:05<01:17 78.78it/s]  4 loss: 0.031896, acc: 0.96284: 24960/31040 [05:06<01:17 78.78it/s]  4 loss: 0.031875, acc: 0.9628:  25600/31040 [05:14<01:09 78.34it/s]  4 loss: 0.031875, acc: 0.9628: 25600/31040 [05:14<01:09 78.34it/s]  4 loss: 0.032006, acc: 0.96267: 