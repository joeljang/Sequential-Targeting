0/2944 [00:00<? ?it/s] wheel_imm.py:235: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  label = torch.tensor(batch.label, dtype=torch.long, device=self.device)
RECORDING GRADIENT TO FISHER MATRIX!!
0/2944 [00:00<? ?it/s]  0 loss: 1.081, acc: 0.35938: RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
640/2944 [00:07<00:25 89.28it/s]  0 loss: 1.081, acc: 0.35938: RECORDING GRADIENT TO FISHER MATRIX!!
640/2944 [00:07<00:25 89.28it/s]  0 loss: 1.0468, acc: 0.49858: RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
1280/2944 [00:14<00:19 87.26it/s]  0 loss: 1.0468, acc: 0.49858: RECORDING GRADIENT TO FISHER MATRIX!!
1280/2944 [00:15<00:19 87.26it/s]  0 loss: 1.0355, acc: 0.49702: RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
1920/2944 [00:22<00:11 85.99it/s]  0 loss: 1.0355, acc: 0.49702: 1920/2944 [00:23<00:11 85.99it/s]  0 loss: 1.0288, acc: 0.48841: RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
2560/2944 [00:30<00:04 85.66it/s]  0 loss: 1.0288, acc: 0.48841: 2560/2944 [00:30<00:04 85.66it/s]  0 loss: 1.0134, acc: 0.51029: RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
RECORDING GRADIENT TO FISHER MATRIX!!
2944/2944 [00:34<00:00 85.17it/s]  0 loss: 1.0134, acc: 0.51029: 
{"type": "train", "dataset": "posneg_test", "epoch": 0, "loss": 0.9973951645547842, "acc": 0.521932830705963}
| 0/2944 [00:00<?, ?it/s]wheel_imm.py:341: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  label = torch.tensor(batch.label, dtype=torch.long, device=self.device)
| 448/2944 [00:00<00:00, 4141.90it/s]| 768/2944 [00:00<00:00, 3623.89it/s]| 1024/2944 [00:00<00:00, 3034.01it/s]| 1216/2944 [00:00<00:00, 2550.31it/s]| 1408/2944 [00:00<00:00, 2186.80it/s]| 1600/2944 [00:00<00:00, 1922.38it/s]| 1792/2944 [00:00<00:00, 1683.02it/s]| 1984/2944 [00:01<00:00, 1464.77it/s]| 2176/2944 [00:01<00:00, 1277.64it/s]| 2368/2944 [00:01<00:00, 1102.16it/s]| 2496/2944 [00:01<00:00, 952.18it/s] | 2624/2944 [00:01<00:00, 815.89it/s]| 2752/2944 [00:02<00:00, 672.86it/s]| 2880/2944 [00:02<00:00, 471.51it/s]| 2944/2944 [00:02<00:00, 403.57it/s]| 2944/2944 [00:02<00:00, 1067.38it/s]
/usr/local/lib/python3.6/dist-packages/scikit_learn-0.23.1-py3.6-linux-x86_64.egg/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
{"type": "test", "epoch": 0, "accuracy": 0.5843043180260452, "precision": 0.4196438492724912, "recall": 0.4335215368540765, "f1score": 0.3819663923182442, "ROC-AUC": 0.7925305988772732}
