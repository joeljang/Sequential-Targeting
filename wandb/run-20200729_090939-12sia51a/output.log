0/12544 [00:00<? ?it/s] wheel.py:112: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  label = torch.tensor(batch.label, dtype=torch.long, device=self.device)
0/12544 [00:00<? ?it/s]  0 loss: 1.1895, acc: 0.0: 640/12544 [00:05<01:34 125.48it/s]  0 loss: 1.1895, acc: 0.0: 640/12544 [00:05<01:34 125.48it/s]  0 loss: 0.81029, acc: 0.59801: 1280/12544 [00:10<01:28 126.78it/s]  0 loss: 0.81029, acc: 0.59801: 1280/12544 [00:10<01:28 126.78it/s]  0 loss: 0.73133, acc: 0.63616: 1920/12544 [00:15<01:24 125.41it/s]  0 loss: 0.73133, acc: 0.63616: 1920/12544 [00:15<01:24 125.41it/s]  0 loss: 0.7035, acc: 0.64617:  2560/12544 [00:20<01:19 125.34it/s]  0 loss: 0.7035, acc: 0.64617: 2560/12544 [00:20<01:19 125.34it/s]  0 loss: 0.68658, acc: 0.65244: 3200/12544 [00:25<01:15 124.48it/s]  0 loss: 0.68658, acc: 0.65244: 3200/12544 [00:26<01:15 124.48it/s]  0 loss: 0.67952, acc: 0.65165: 3840/12544 [00:30<01:10 123.84it/s]  0 loss: 0.67952, acc: 0.65165: 3840/12544 [00:31<01:10 123.84it/s]  0 loss: 0.67189, acc: 0.6542:  4480/12544 [00:35<01:04 124.57it/s]  0 loss: 0.67189, acc: 0.6542: 4480/12544 [00:36<01:04 124.57it/s]  0 loss: 0.6662, acc: 0.65471: 5120/12544 [00:40<00:58 125.95it/s]  0 loss: 0.6662, acc: 0.65471: 5120/12544 [00:41<00:58 125.95it/s]  0 loss: 0.66295, acc: 0.65355: 5760/12544 [00:45<00:54 125.53it/s]  0 loss: 0.66295, acc: 0.65355: 5760/12544 [00:46<00:54 125.53it/s]  0 loss: 0.66081, acc: 0.65196: 6400/12544 [00:50<00:48 126.19it/s]  0 loss: 0.66081, acc: 0.65196: 6400/12544 [00:51<00:48 126.19it/s]  0 loss: 0.65708, acc: 0.65099: 7040/12544 [00:55<00:43 126.79it/s]  0 loss: 0.65708, acc: 0.65099: 7040/12544 [00:56<00:43 126.79it/s]  0 loss: 0.65025, acc: 0.65428: 7680/12544 [01:00<00:37 128.36it/s]  0 loss: 0.65025, acc: 0.65428: 7680/12544 [01:01<00:37 128.36it/s]  0 loss: 0.64348, acc: 0.65754: 8320/12544 [01:06<00:33 126.33it/s]  0 loss: 0.64348, acc: 0.65754: 8320/12544 [01:06<00:33 126.33it/s]  0 loss: 0.63897, acc: 0.65899: 8960/12544 [01:11<00:28 127.17it/s]  0 loss: 0.63897, acc: 0.65899: 8960/12544 [01:11<00:28 127.17it/s]  0 loss: 0.6335, acc: 0.66179:  9600/12544 [01:15<00:22 128.30it/s]  0 loss: 0.6335, acc: 0.66179: 9600/12544 [01:16<00:22 128.30it/s]  0 loss: 0.62909, acc: 0.66463: 10240/12544 [01:21<00:18 126.28it/s]  0 loss: 0.62909, acc: 0.66463: 10240/12544 [01:21<00:18 126.28it/s]  0 loss: 0.62415, acc: 0.66595: 10880/12544 [01:25<00:12 128.26it/s]  0 loss: 0.62415, acc: 0.66595: 10880/12544 [01:26<00:12 128.26it/s]  0 loss: 0.62074, acc: 0.66877: 11520/12544 [01:31<00:08 127.41it/s]  0 loss: 0.62074, acc: 0.66877: 11520/12544 [01:31<00:08 127.41it/s]  0 loss: 0.61642, acc: 0.67136: 12160/12544 [01:36<00:03 126.14it/s]  0 loss: 0.61642, acc: 0.67136: 12160/12544 [01:36<00:03 126.14it/s]  0 loss: 0.61036, acc: 0.67531: 12544/12544 [01:38<00:00 126.82it/s]  0 loss: 0.61036, acc: 0.67531: 
{"type": "train", "dataset": "combined12500", "epoch": 0, "loss": 0.6076262655677347, "acc": 0.6768517037274037}
| 0/1024 [00:00<?, ?it/s]wheel.py:152: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  label = torch.tensor(batch.label, dtype=torch.long, device=self.device)
| 320/1024 [00:00<00:00, 2374.27it/s]| 512/1024 [00:00<00:00, 1954.81it/s]| 640/1024 [00:00<00:00, 1539.15it/s]| 768/1024 [00:00<00:00, 1080.27it/s]| 896/1024 [00:00<00:00, 835.03it/s] | 1024/1024 [00:01<00:00, 612.26it/s]| 1024/1024 [00:01<00:00, 872.97it/s]
[0.77241379 0.6849642 ]
{"type": "test", "dataset": "test_jj", "epoch": 0, "accuracy": 0.7357357357357357, "precision": 0.7326717189943461, "recall": 0.7557901697156711, "f1score": 0.7286889967903876}
Traceback (most recent call last):
  File "wheel.py", line 200, in <module>
    wheel.train()
  File "wheel.py", line 137, in train
    wandb.log({'Accuracy':accuracy,'Precision':prec,'Recall':recall,'F1Score':f1score,'0F1':f1s[0],'1F1':f1s[1],'2F1':f1s[2]})
IndexError: index 2 is out of bounds for axis 0 with size 2
