0/12544 [00:00<? ?it/s] wheel.py:112: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  label = torch.tensor(batch.label, dtype=torch.long, device=self.device)
0/12544 [00:00<? ?it/s]  0 loss: 1.1291, acc: 0.10938: 640/12544 [00:05<01:36 123.14it/s]  0 loss: 1.1291, acc: 0.10938: 640/12544 [00:05<01:36 123.14it/s]  0 loss: 0.81697, acc: 0.56818: 1280/12544 [00:10<01:31 123.37it/s]  0 loss: 0.81697, acc: 0.56818: 1280/12544 [00:10<01:31 123.37it/s]  0 loss: 0.73959, acc: 0.60938: 1920/12544 [00:15<01:24 125.80it/s]  0 loss: 0.73959, acc: 0.60938: 1920/12544 [00:15<01:24 125.80it/s]  0 loss: 0.70667, acc: 0.62853: 2560/12544 [00:19<01:17 128.16it/s]  0 loss: 0.70667, acc: 0.62853: 2560/12544 [00:20<01:17 128.16it/s]  0 loss: 0.68342, acc: 0.64558: 3200/12544 [00:24<01:12 128.25it/s]  0 loss: 0.68342, acc: 0.64558: 3200/12544 [00:25<01:12 128.25it/s]  0 loss: 0.67303, acc: 0.65074: 3840/12544 [00:30<01:09 126.03it/s]  0 loss: 0.67303, acc: 0.65074: 3840/12544 [00:30<01:09 126.03it/s]  0 loss: 0.66724, acc: 0.64959: 4480/12544 [00:35<01:03 126.49it/s]  0 loss: 0.66724, acc: 0.64959: 4480/12544 [00:35<01:03 126.49it/s]  0 loss: 0.66042, acc: 0.65053: 5120/12544 [00:40<00:59 125.51it/s]  0 loss: 0.66042, acc: 0.65053: 5120/12544 [00:41<00:59 125.51it/s]  0 loss: 0.65535, acc: 0.65046: 5760/12544 [00:45<00:53 126.16it/s]  0 loss: 0.65535, acc: 0.65046: 5760/12544 [00:46<00:53 126.16it/s]  0 loss: 0.64969, acc: 0.65264: 6400/12544 [00:50<00:49 125.12it/s]  0 loss: 0.64969, acc: 0.65264: 6400/12544 [00:51<00:49 125.12it/s]  0 loss: 0.64087, acc: 0.65811: 7040/12544 [00:55<00:44 124.86it/s]  0 loss: 0.64087, acc: 0.65811: 7040/12544 [00:56<00:44 124.86it/s]  0 loss: 0.63468, acc: 0.66174: 7680/12544 [01:00<00:38 126.81it/s]  0 loss: 0.63468, acc: 0.66174: 7680/12544 [01:01<00:38 126.81it/s]  0 loss: 0.63126, acc: 0.66206: 8320/12544 [01:05<00:32 128.34it/s]  0 loss: 0.63126, acc: 0.66206: 8320/12544 [01:06<00:32 128.34it/s]  0 loss: 0.62587, acc: 0.66484: 8960/12544 [01:10<00:28 125.82it/s]  0 loss: 0.62587, acc: 0.66484: 8960/12544 [01:11<00:28 125.82it/s]  0 loss: 0.62095, acc: 0.668:   9600/12544 [01:15<00:22 128.27it/s]  0 loss: 0.62095, acc: 0.668: 9600/12544 [01:16<00:22 128.27it/s]  0 loss: 0.61403, acc: 0.6725: 10240/12544 [01:20<00:18 126.34it/s]  0 loss: 0.61403, acc: 0.6725: 10240/12544 [01:21<00:18 126.34it/s]  0 loss: 0.60919, acc: 0.67634: 10880/12544 [01:25<00:13 126.23it/s]  0 loss: 0.60919, acc: 0.67634: 10880/12544 [01:26<00:13 126.23it/s]  0 loss: 0.60294, acc: 0.68074: 11520/12544 [01:31<00:08 125.52it/s]  0 loss: 0.60294, acc: 0.68074: 11520/12544 [01:31<00:08 125.52it/s]  0 loss: 0.59842, acc: 0.68327: 12160/12544 [01:35<00:02 130.18it/s]  0 loss: 0.59842, acc: 0.68327: 12160/12544 [01:35<00:02 130.18it/s]  0 loss: 0.59458, acc: 0.68521: 12544/12544 [01:38<00:00 127.81it/s]  0 loss: 0.59458, acc: 0.68521: 
{"type": "train", "dataset": "combined12500", "epoch": 0, "loss": 0.5927767718225417, "acc": 0.6859702447608382}
| 0/1024 [00:00<?, ?it/s]wheel.py:152: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  label = torch.tensor(batch.label, dtype=torch.long, device=self.device)
| 256/1024 [00:00<00:00, 2341.56it/s]| 448/1024 [00:00<00:00, 1881.81it/s]| 576/1024 [00:00<00:00, 1564.36it/s]| 704/1024 [00:00<00:00, 1256.57it/s]| 832/1024 [00:00<00:00, 943.90it/s] | 960/1024 [00:01<00:00, 707.69it/s]| 1024/1024 [00:01<00:00, 857.00it/s]
[0.77645051 0.68280872]
{"type": "test", "dataset": "test_jj", "epoch": 0, "accuracy": 0.7377377377377378, "precision": 0.7314212390660015, "recall": 0.7540114613180515, "f1score": 0.7296296143262071}
Traceback (most recent call last):
  File "wheel.py", line 200, in <module>
    wheel.train()
  File "wheel.py", line 137, in train
    wandb.log({'Accuracy':accuracy,'Precision':prec,'Recall':recall,'F1Score':f1score,'0F1':f1s[0],'1F1':f1s[1],'2F1':f1s[2]})
IndexError: index 2 is out of bounds for axis 0 with size 2
